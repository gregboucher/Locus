@model UserReportViewModel

@section top_bar {
    <input class="top-bar__field" id="top-bar__field" type="text" placeholder="" disabled>
}

@section side_bar {
    <a asp-controller="Home" asp-action="Dashboard" class="button">
        <i class="button__icon icon-home"></i>
        <div class="button__text">Dashboard</div>
    </a>
    <a asp-controller="User" asp-action="Create" class="button">
        <i class="button__icon icon-user-plus"></i>
        <div class="button__text">New User</div>
    </a>
}

@section content {
    <div class="report">
        <div class="report-content">
            <div class="report-header">
                <div>
                    <div class="report-header__name select--on">@Model.Report.UserName</div>
                    <div class="report-header__date select--on">@Model.Report.UserCreated.ToString("dd-MM-yy h:mm tt")</div>
                </div>
                <div class="report-header__right">
                    <div class="btn btn--dark help" onmouseover="ShowTooltip($(this), 500, false, 10, 10);" onmouseout="HideTooltip($(this));">?</div>
                    <div class="tooltip">
                        <div class="tooltip__content tooltip__content--no-spacing tooltip--caps">
                            <div><i class="icon-plus tooltip__icon tooltip__icon--green"></i>asset has been assigned for one period</div>
                            <div><i class="icon-star tooltip__icon tooltip__icon--blue"></i>asset has been assigned indefinitely</div>
                            <div><i class="icon-cancel tooltip__icon tooltip__icon--red"></i>asset has been returned</div>
                            <div><i class="icon-forward tooltip__icon tooltip__icon--yellow"></i>due date has been extended one period from today</div>
                            <div><i class="icon-circle-empty tooltip__icon"></i>assigned, no action performed</div>
                        </div>
                    </div>
                    @{
                        switch (Model.Report.UserStatus)
                        {
                            case Status.Active:
                                <a asp-controller="User" asp-action="Edit" asp-route-userId="@Model.Report.UserId" class="btn btn--dark" title="Edit this User">Edit User</a>
                                if (Model.Report.PrintableCollections.Any())
                                {
                                    <input type="button" value="Print Report" id="button-print" class="btn">
                                }
                                break;
                            case Status.Inactive:
                                <i class="icon-info report-header__icon report-header__icon--blue"></i>
                                <div>
                                    <div>All outstanding assets have been returned. User is INACTIVE</div>
                                </div>
                                break;
                            case Status.Error:
                                <i class="icon-attention report-header__icon report-header__icon--yellow"></i>
                                <div>
                                    <div>An error has occoured!</div>
                                </div>
                                break;
                        }
                    }
                </div>
            </div>
            @{
                if (Model.Report.ResultCollections.Any())
                {
                    //assignments have changed, show only changes
                    foreach (var collection in Model.Report.ResultCollections)
                    {
                        <div class="report-collection">
                            <div class="report-collection__title">@collection.Name</div>
                            @foreach (var reportItem in collection.TList)
                            {
                                switch (reportItem)
                                {
                                    case DetailedReportItem item:
                                        item = reportItem as DetailedReportItem;
                                        switch (item.Type)
                                        {
                                            case OperationType.Assignment:
                                                sharedHTML("ok", "report-item__status--green", item);
                                                break;
                                            case OperationType.Long_term:
                                                sharedHTML("star", "report-item__status--blue", item);
                                                break;
                                            case OperationType.Extension:
                                                sharedHTML("forward", "report-item__status--yellow", item);
                                                break;
                                        }
                                        break;
                                    case ErrorReportItem item:
                                        item = reportItem as ErrorReportItem;
                                        <div class="report-item report-item--error">
                                            <i class="icon-cancel report-item__status report-item__status--red"></i>
                                            <i class="icon-@item.Icon report-item__model-icon"></i>
                                            <div class="report-item__model">
                                                <div class="report-item__model-name">@item.Model</div>
                                                <div class="report-item__model-tag select--on">@item.Tag</div>
                                            </div>
                                            <div class="report-item__info--error">
                                                @("Error attempting to perform " + item.Type.ToString().Replace("_", "-"))
                                            </div>
                                        </div>
                                        break;
                                    case SimpleReportItem item:
                                        item = reportItem as SimpleReportItem;
                                        <div class="report-item">
                                            <i class="icon-cancel report-item__status report-item__status--red"></i>
                                            <i class="icon-@item.Icon report-item__model-icon"></i>
                                            <div class="report-item__model">
                                                <div class="report-item__model-name select--on">@item.Model</div>
                                                <div class="report-item__model-tag select--on">@item.Tag</div>
                                            </div>
                                        </div>
                                        break;
                                }
                            }
                        </div>
                    }
                }
                else
                {
                    //no results, show all assigned assets
                    if (Model.Report.PrintableCollections.Any())
                    {
                        foreach (var collection in Model.Report.PrintableCollections)
                        {
                            <div class="report-collection">
                                <div class="report-collection__title">@collection.Name</div>
                                @foreach (var item in collection.TList)
                                {
                                    sharedHTML("circle-empty", "", item);
                                }
                            </div>
                        }
                    }

                }
            }
        </div>
            @if (Model.Report.PrintableCollections.Any())
            {
                <div class="print" id="print">
                    @{ 
                        <div class="print__header">
                           <i class="print__locus-icon icon-compass"></i>
                           <div>
                               <div class="print__title">LOCUS</div>
                               <div class="print__sub-title">asset management</div>
                           </div>
                        </div>
                        <div class="print__name">@Model.Report.UserName</div>
                        <div class="print__date">@DateTime.Now.ToString("dd-MM-yy h:mm tt")</div>
                        foreach (var collection in Model.Report.PrintableCollections)
                        {
                            foreach (var item in collection.TList)
                            {
                                <hr />
                                <div class="print__asset">
                                    <i class="print__icon icon-@item.Icon"></i>
                                    <div>
                                        <div class="print__model">@item.Model</div>
                                        <div class="print__bold">Tag: <span>@item.Tag</span></div>
                                        <div class="print__bold">Due: <span>@item.Due.ToString("dd-MM-yy")</span></div>
                                        @if (item.CustomProperties != null)
                                        {
                                            foreach (var property in item.CustomProperties)
                                            {
                                                <div>
                                                    <div class="print__bold">@property.Name: <span>@property.Value</span></div>
                                                </div>
                                            
                                            }
                                        }
                                    </div>
                                </div>
                               
                            }
                        }
                    }
                    <div class="print__blank"></div>
                </div>
            }
    </div>
}

@functions {
    void sharedHTML(string statusIcon, string colour, DetailedReportItem item)
    {
        <div class="report-item">
            <i class="icon-@statusIcon report-item__status @colour"></i>
            <i class="icon-@item.Icon report-item__model-icon"></i>
            <div class="report-item__model">
                <div class="report-item__model-name select--on">@item.Model</div>
                <div class="report-item__model-tag select--on">@item.Tag</div>
            </div>
            @{
                if (item.CustomProperties != null)
                {
                    foreach (var property in item.CustomProperties)
                    {
                        <div class="report-item__info">
                            <div class="report-item__info-title">@property.Name</div>
                            <div class="report-item__info-value select--on">@property.Value</div>
                        </div>
                    }
                }
            }
            <div class="report-item__info">
                <div class="report-item__info-title">Due</div>
                <div class="report-item__info-value select--on">@item.Due.ToString("dd-MM-yy")</div>
            </div>
        </div>
    }
}

@section stylesheet {
        <link rel="stylesheet" href="~/css/report.css">
}

@section javascript {
    <script src="~/js/printThis.js"></script>
    <script src="~/js/report.js"></script>
}