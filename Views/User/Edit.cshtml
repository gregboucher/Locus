@model UserEditViewModel

@section top_bar {
    <input class="top-bar__field" id="top-bar__field" type="text" placeholder="Search Assets by Model, Tag, Status or Collection">
}

@section side_bar {
    <a asp-controller="Home" asp-action="Dashboard" class="button">
        <i class="button__icon icon-home"></i>
        <div class="button__text">Dashboard</div>
    </a>
    <a asp-controller="User" asp-action="Create" class="button">
        <i class="button__icon icon-user-plus"></i>
        <div class="button__text">New User</div>
    </a>
}

    @section content {
    <form class="user" id="user" method="post" autocomplete="off">
        <div class="content">
            <div class="form">
                <div class="form__row">
                    <div><i class="form__icon icon-user"></i>Name</div>
                    <input name="UserDetails.Name" value="@Model.UserDetails.Name" class="form__input" type="text" placeholder="">
                </div>
                <div class="form__row">
                    <div><i class="form__icon icon-mail-alt"></i>Email</div>
                    <input name="UserDetails.Email" value="@Model.UserDetails.Email" class="form__input" type="text" placeholder="">
                </div>
                <div class="form__row">
                    <div><i class="form__icon icon-phone"></i>Phone</div>
                    <input name="UserDetails.Phone" value="@Model.UserDetails.Phone" class="form__input " type="text" placeholder="">
                </div>
                <div class="form__row">
                    <div><i class="form__icon icon-user-times"></i>Absentee</div>
                    <input name="UserDetails.Absentee" value="@Model.UserDetails.Absentee" class="form__input" type="text" placeholder="">
                </div>
                <div class="form__row">
                    <div><i class="form__icon icon-th-list"></i>Role</div>
                    <div class="form__input-wrapper">
                        <select name="UserDetails.RoleId" class="form__input form__input--select">
                            @foreach (var role in Model.Roles)
                            {
                                if (Model.UserDetails.RoleId == role.Id)
                                {
                                    <option value="@role.Id" selected>@role.Name</option>
                                }
                                else
                                {
                                    <option value="@role.Id">@role.Name</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="form__row form__row--grow">
                    <div><i class="form__icon icon-align-left"></i>Comments</div>
                    <textarea name="UserDetails.Comment" class="form__input form__input--comment">@Model.UserDetails.Comment</textarea>
                </div>
            </div>
            <div class="assets">
                <div class="assets__header">
                    <div class="dropdown__wrapper dropdown__wrapper--larger">
                        <div id="dropdown" class="dropdown">Assigned</div>
                        <div class="dropdown__content">
                            <input class="dropdown__search" type="text">
                            <div class="dropdown__scroll-group">
                                <div class="dropdown__option is-active" data-search="is-assigned">Assigned<span class="dropdown__option-value">@{var count = 0; foreach (var collection in Model.CollectionsOfModels) { count += collection.TotalAssigned; } @count }</span></div>
                                <div class="dropdown__option" data-search="">All<span class="dropdown__option-value">@{count = 0; foreach (var collection in Model.CollectionsOfModels) { count += collection.TList.Count; } @count }</span></div>
                                @foreach (var collection in Model.CollectionsOfModels)
                                {
                                    <div class="dropdown__option" data-search="@collection.Name">@collection.Name<span class="dropdown__option-value">@collection.TList.Count</span></div>
                                }
                            </div>
                        </div>
                    </div>
                    <label class="assets__header-label">
                        Return All
                        <input type="checkbox" class="assets__header-check" id="assets__header-check" />
                        <label for="assets__header-check"></label>
                    </label>
                </div>
                <div class="assets__body">
                    @{
                        int index = 0;
                        foreach (var collection in Model.CollectionsOfModels)
                        {
                            foreach (var _model in collection.TList)
                            {
                                if (_model.Asset == null)
                                {
                                        <div class="card__wrapper @(_model.Surplus == 0 ? "is-empty" : "") @(_model.IsCustomPeriod == true ? "is-customPeriod" : "")">
                                            @if (_model.Surplus != 0)
                                            {
                                                <input type="hidden" class="card__hidden" name="AssignmentOperations.Index" value="@index" disabled />
                                                <input type="hidden" class="card__hidden" name="AssignmentOperations[@index].ModelId" value="@_model.Id" disabled />
                                                <input type="hidden" class="card__hidden" name="AssignmentOperations[@index].CollectionId" value="@collection.Id" disabled />
                                                if (_model.IsCustomPeriod == true)
                                                {
                                                    <input type="hidden" class="card__hidden" name="AssignmentOperations[@index].Period" value="@_model.Period" disabled />
                                                }
                                                <input type="radio" class="card__input is-assign" name="AssignmentOperations[@index].Type" value="1" />
                                                <input type="radio" class="card__input is-long_term" name="AssignmentOperations[@index].Type" value="2" />
                                                ++index;
                                            }
                                            <div class="card">
                                                <i class="icon-@_model.Icon card__icon"></i>
                                                <div class="card__body-A">
                                                    <div class="card__model searchable">@_model.Name</div>
                                                    <div class="card__collection searchable">@collection.Name</div>
                                                </div>
                                                <div class="card__body-B">
                                                    <div class="card__properties">
                                                        <div>Status:</div>
                                                        <div>Surplus:</div>
                                                        <div>Period:</div>
                                                    </div>
                                                    <div class="card__values">
                                                        <div>@(_model.Surplus == 0 ? "Empty" : "Available")</div>
                                                        <div>@(_model.Surplus + " / " + _model.Total)</div>
                                                        <div>@(_model.Period + " day" + (_model.Period == 1 ? "" : "s"))</div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                }
                                else
                                {
                                    <div class="card__wrapper is-assigned @(_model.IsCustomPeriod == true ? "is-customPeriod" : "")">
                                        <input type="hidden" class="card__hidden" name="EditOperations.Index" value="@index" disabled />
                                        <input type="hidden" class="card__hidden" name="EditOperations[@index].AssetId" value="@_model.Asset.Id" disabled />
                                        @if (_model.IsCustomPeriod == true)
                                            {
                                                <input type="hidden" class="card__hidden" name="EditOperations[@index].Period" value="@_model.Period" disabled />
                                            }
                                        <input type="radio" class="card__input is-return" name="EditOperations[@index].Type" value="3" />
                                        @if (_model.Asset.Due.HasValue)
                                        {
                                            <input type="radio" class="card__input is-extend" name="EditOperations[@index].Type" value="4" />
                                        }
                                        <div class="card">
                                            <i class="icon-@_model.Icon card__icon"></i>
                                            <div class="card__body-A">
                                                <div class="card__model searchable">@_model.Name</div>
                                                <div class="card__collection searchable">
                                                    @collection.Name<span class="card__tag searchable">
                                                        @_model.Asset.Tag
                                                    </span>
                                                </div>
                                            </div>
                                            <div class="card__body-B">
                                                <div class="card__properties">
                                                    <div>Status:</div>
                                                    <div>Assigned:</div>
                                                    <div>Due:</div>
                                                </div>
                                                <div class="card__values">
                                                    <div class="card__values--@_model.Asset.Status.ToString().ToLower() searchable">@_model.Asset.Status.ToString().Replace("_", "-")</div>
                                                    <div>@_model.Asset.Assigned.ToString("dd-MM-yy")</div>
                                                    <div>@(_model.Asset.Due.HasValue ? @_model.Asset.Due.Value.ToString("dd-MM-yy") : "...")</div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    ++index;
                                }
                            }
                        }
                    }
                </div>
            </div>
        </div>
        <div class="footer">
            <input type="submit" value="Save" id="submit" class="btn">
            <a asp-controller="User" asp-action="Report" asp-route-userId="@Model.UserId" class="btn btn--dark">Generate User Report</a>
            <input type="button" value="Reset Selection" data-page="edit" id="reset" class="btn btn--dark">
            <a asp-controller="Home" asp-action="Dashboard" class="btn btn--dark">Cancel</a>
            <div class="btn btn--dark help" onmouseover="ShowTooltip($(this), 500, true, 0, -170);" onmouseout="HideTooltip($(this));">?</div>
            <div class="tooltip">
                <div class="tooltip__content">
                    <div>
                        Click multiple times on a <span>model card</span> to cycle through<br />
                        available operations.
                    </div>
                    <div>Where no asset is assigned:</div>
                    <div class="tooltip__block tooltip--caps">
                        <div><i class="icon-plus tooltip__icon tooltip__icon--green"></i>assign a new asset</div>
                        <div><i class="icon-star tooltip__icon tooltip__icon--blue"></i>assign a new asset indefinitely</div>
                    </div>
                    <div>For assets that are assigned:</div>
                    <div class="tooltip__block tooltip--caps">
                        <div><i class="icon-cancel tooltip__icon tooltip__icon--red"></i>return this asset</div>
                        <div><i class="icon-forward tooltip__icon tooltip__icon--yellow"></i>extend the due date by one period</div>
                    </div>
                    <div>
                        Creating a new assignment will select an asset <span>at random</span><br />
                        from the available pool, based on the selected model and<br />
                        collection. The duration of the assignment will be equal<br />
                        to the <span>period</span> shown on the <span>model card</span>.
                    </div>
                </div>
            </div>
        </div>
    </form>
}

@section stylesheet {
    <link rel="stylesheet" href="~/css/user.css">
    <link rel="stylesheet" href="~/css/dropdown.css">
}

@section javascript {
    <script src="~/js/jquery.validate.min.js"></script>
    <script src="~/js/dropdown.js"></script>
    <script src="~/js/user.js"></script>
}