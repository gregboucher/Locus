@model UserSummaryViewModel

@section top_bar {
    <input class="top-bar__input" id="top-bar__input" type="text" placeholder="" disabled>
}

@section side_bar {
    <a asp-controller="Home" asp-action="Dashboard" class="navigation__button">
        <i class="icon-home navigation__button-icon"></i>
        <div class="navigation__button-text">Dashboard</div>
    </a>
    <a asp-controller="User" asp-action="Create" class="navigation__button">
        <i class="icon-user-plus navigation__button-icon"></i>
        <div class="navigation__button-text">New Assignment</div>
    </a>
}

@section content {
    <div class="summary">
        <div class="summary-content">
            <div class="summary-header">
                <div>
                    <div class="summary-header__name select--on">@Model.User.Name</div>
                    <div class="summary-header__date select--on">@Model.User.Created.ToString("dd-MM-yy h:mm tt")</div>
                </div>
                <div class="summary-header__right">
                    @{
                        switch (Model.User.Status)
                        {
                            case Status.Active:
                                <a asp-controller="User" asp-action="Edit" asp-route-userId="@Model.User.Id" class="summary-header__button" title="Edit this User">Edit User</a>
                                <input type="button" value="Print Assignments" class="summary-header__button">
                                break;
                            case Status.Inactive:
                                <i class="icon-info summary-header__icon summary-header__icon--blue"></i>
                                <div>
                                    <div>All outstanding assets have been returned</div>
                                    <div>User is INACTIVE</div>
                                </div>
                                break;
                            case Status.Error:
                                <i class="icon-attention summary-header__icon summary-header__icon--yellow"></i>
                                <div>
                                    <div>An error has occoured!</div>
                                    <div>Unable to count user assignments</div>
                                </div>
                                break;
                        }
                    }
                </div>
            </div>
            @{
                foreach (var group in Model.User.GroupedSummaries)
                {
                    <div class="summary-group">
                        <div class="summary-group__title">@group.Name</div>
                        @foreach (var summary in group.Summaries)
                        {
                            switch (summary)
                            {
                                case ReturnedSummary returned:
                                    returned = summary as ReturnedSummary;
                                    <div class="summary-item">
                                        <i class="icon-cancel summary-item__status summary-item__status--red"></i>
                                        <i class="icon-@returned.Icon summary-item__model-icon"></i>
                                        <div class="summary-item__model">
                                            <div class="summary-item__model-name select--on">@returned.Model</div>
                                            <div class="summary-item__model-tag select--on">@returned.Tag</div>
                                        </div>
                                    </div>
                                    break;
                                case ErrorSummary error:
                                    error = summary as ErrorSummary;
                                    <div class="summary-item summary-item--error">
                                        <i class="icon-cancel summary-item__status summary-item__status--red"></i>
                                        <i class="icon-@error.Icon summary-item__model-icon"></i>
                                        <div class="summary-item__model">
                                            <div class="summary-item__model-name">@error.Model</div>
                                            <div class="summary-item__model-tag select--on">@error.Tag</div>
                                        </div>
                                        <div class="summary-item__info--error">
                                            @error.Message
                                        </div>
                                    </div>
                                    break;
                                case AssignmentSummary asset:
                                    sharedHTML<AssignmentSummary>("ok", "green", summary as AssignmentSummary);
                                    break;
                                case ExtensionSummary asset:
                                    sharedHTML<ExtensionSummary>("forward", "yellow", summary as ExtensionSummary);
                                    break;
                            }
                        }
                    </div>
                }
            }
        </div>
    </div>
}

@functions {
    void sharedHTML<T>(string statusIcon, string colour, T summary)
        where T : DetailedSummary, new()
    {
        <div class="summary-item">
            <i class="icon-@statusIcon summary-item__status summary-item__status--@colour"></i>
            <i class="icon-@summary.Icon summary-item__model-icon"></i>
            <div class="summary-item__model">
                <div class="summary-item__model-name select--on">@summary.Model</div>
                <div class="summary-item__model-tag select--on">@summary.Tag</div>
            </div>
            @{
                foreach (var property in summary.CustomProperties)
                {
                    <div class="summary-item__info">
                        <div class="summary-item__info-title">@property.Name</div>
                        <div class="summary-item__info-value select--on">@property.Value</div>
                    </div>
                }
            }
            <div class="summary-item__info">
                <div class="summary-item__info-title">Due</div>
                <div class="summary-item__info-value select--on">@summary.Due.ToString("dd-MM-yy")</div>
            </div>
        </div>
    }
}

@section stylesheet {
    <link rel="stylesheet" href="~/css/summary.css">
}

@section javascript {
    <script src="~/js/jquery.js"></script>
    <script src="~/js/accordion.js"></script>
}
